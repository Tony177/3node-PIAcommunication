		ORG		$8000
MSG 		DS.B		12 *OTTENUTO COME 2T*N
MFB 		DS.B 		3 * MESSAGGIO FASE 1 DI B
MFC 		DS.B 		3 * MESSAGGIO FASE 1 DI C
N 		DC.B 		3 * NUMERO CARATTERI PER MESSAGGIO
T 		DC.B		2 * NUMERO MESSAGGI GIA DIVISO META TRA B E C
C_CHC		DC.B 		0
C_CHB 	DC.B 		0
C_MGC	DC.B 		0
C_MGB 	DC.B 		0
PIADB		EQU	 	$2004 * pia dati a-b porto b
PIACB		EQU  		$2005 * pia controllo/stato a-b porto b
PIADC		EQU  		$2008 * pia dati a-c porto b
PIACC		EQU 		$2009 * pia controllo/stato a-c porto b
FASE 		DC.B		0 * fase 1 => 0, fase 2 => 1
TURN		DC.B		0 * 0 => turno b, 1 => turno C
SUSPB		DC.B		1
SUSPC		DC.B		1
LOCK 		DC.B	 	0


*******************************************************
* CHECK PROGRAM
* RET 0 SE SONO DIVERSI, 1 SE SONO UGUALI
*******************************************************

		ORG		$8200
OFMFC		EQU		8
OFMFB	EQU		12
OFRET		EQU		16

CHECK		LINK		A6,#-24		*2 - D0, 2 - D1, 2 - D2, 2 - D3 4 - A0, 4 - A1  
		MOVE.L	D0,-4(A6)
		MOVE.L	D1,-8(A6)
		MOVE.L	D2,-12(A6)
		MOVE.L	D3,-16(A6)
		MOVE.L	A0,-20(A6)
		MOVE.L	A1,-24(A6)
		MOVE.B	#0,D0			* CONTATORE CARATTERI
		MOVE.B	N,D1			
CHKLOOP	MOVE.L	OFMFC(A6),A0	* INDIRIZZO MESSAGGIO C
		MOVE.L	OFMFB(A6),A1 	* INDIRIZZO MESSAGGIO B
		CMP.B		D0,D1
		BEQ		CHKRET
		MOVE.B	(A0,D0),D2 		* CARATTERE D0-ESIMO DI C IN D2
		MOVE.B	(A1,D0),D3 		* CARATTERE D0-ESIMO DI B IN D3
		ADD.B		#1,D0	
		CMP.B		D2,D3			* CONTROLLA SE C[D0] == B[D0]
		BEQ		CHKLOOP			* SE ALMENO UNO È DIVERSO CONTINUA E RITORNA 0
		MOVE.L	#0,OFRET(A6)
		JMP		ENDCHK

CHKRET	MOVE.L	#1,OFRET(A6)

ENDCHK	MOVE.L	-24(A6),A1
		MOVE.L	-20(A6),A0
		MOVE.L	-16(A6),D3
		MOVE.L	-12(A6),D2
		MOVE.L	-8(A6),D1
		MOVE.L	-4(A6),D0
		UNLK		A6
		RTS

*******************************************************
* MAIN PROGRAM
*******************************************************
		ORG 		$8400
MAIN		JSR		INITB
		JSR		INITC
		ANDI 		#$D8FF,SR * pongo lv interrupt a 000 per non mascherare int B/C
LOOP		JMP 		LOOP

*******************************************************
* INIT PIA A-B
*******************************************************

INITB		MOVE.L 	A0,-(A7)
		MOVE.L 	A1,-(A7)
		MOVEA.L	#PIADB,A0
		MOVEA.L	#PIACB,A1
		MOVE.B	#$00,(A1)
		MOVE.B 	#$00,(A0)
		MOVE.B 	#%00100101,(A1)
		MOVE.L	(A7)+,A1
		MOVE.L	(A7)+,A0
		RTS

*******************************************************
* INIT PIA A-C
*******************************************************

INITC		MOVE.L 	A0,-(A7)
		MOVE.L 	A1,-(A7)
		MOVEA.L	#PIADC,A0
		MOVEA.L	#PIACC,A1
		MOVE.B	#$00,(A1)
		MOVE.B 	#$00,(A0)
		MOVE.B 	#%00100101,(A1)
		MOVE.L 	(A7)+,A1
		MOVE.L 	(A7)+,A0
		RTS

*******************************************************
*BEGIN ISR B CODE
*******************************************************


		ORG 		$8600 
ISRB		MOVE.L 	D0,-(A7)
		MOVE.L 	D1,-(A7)
		MOVE.L 	D2,-(A7)
		MOVE.L 	A0,-(A7)
		MOVE.L	A1,-(A7)

		TAS		LOCK
		BNE 		WAITB
		MOVE 		FASE,D0
		BNE 		FASE2B	*CHECK FASE

FASE1B	MOVE.B	N,D0
		MOVE.B 	C_CHB,D1
		CMP.B		D0,D1		*CONTROLLO SE ASPETTO ALTRI CARATTERI DA B
		BNE 		SAVEB
		MOVE.B	C_CHC,D2	*CONTROLLO SE ANCHE C HA TERMINATO IL MESSAGGIO
		CMP.B		D0,D2
		BNE 		END
		MOVE.B 	#1,FASE 	*CAMBIO IN FASE 2
		MOVE.B 	#0,C_CHB
		MOVE.B 	#0,C_CHC
		ADDA.L 	#-4,A7		*LASCIO UNA LONG PER VALORE RITORNO
		MOVE.L 	#MFB,-(A7)
		MOVE.L 	#MFC,-(A7)
		JSR 		CHECK
		ADDA.L	#8,A7		*POP DUE VALORI DI INGRESSO
		MOVE.L 	(A7)+,D0	*VALORE DI RITORNO
		BNE 		T1
		JMP		T0

SAVEB 	MOVEA.L	#MFB,A0
		MOVEA.L	#PIADB,A1
		MOVE.B 	C_CHB,D0
		MOVE.B 	(A1),(A0,D0)
		ADDI.B		#1,C_CHB
		MOVE.B	C_CHC,D0
		MOVE.B	N,D1
		CMP		D0,D1
		BEQ		END
		MOVE.B 	SUSPC,D0
		BEQ 		END			*SE C ERA SOSPESO EFFETTUO IL SALVATAGGIO DI QUEL VALORE
		MOVEA.L	#MFC,A0
		MOVEA.L	#PIADC,A1
		MOVE.B 	C_CHC,D0
		MOVE.B 	(A1),(A0,D0)
		ADDI.B		#1,C_CHC
		JMP 		END

FASE2B	MOVE.B	TURN,D0	*SE TURNO E' 0 ALLORA TOCCA A B
		BNE		CHKB
		MOVEA.L 	#MSG,A0
		MOVEA.L	#PIADB,A1
		CLR.L		D0
		CLR.L		D1
		CLR.L		D2
		MOVE.B	C_CHB,D0 	*CARICO NUMERO CHAR B
		MOVE.B	C_MGB,D1 	*CARICO NUMERO MSG B
		MOVE.B	C_MGC,D2 	*CARICO NUMERO MSG C
		MOVE.B 	N,D3 		*CARICO NUMERO CARATTERI PER MSG
		MULU		D3,D2		* MOLTIPLICAZIONE NxMSG_C 
		MULU 		D1,D3		*MOLTIPLICAZIONE NxMSG_B
		ADD.L 		D0,D3		*SOMMO LE PRECEDENTI DUE MOLTIPLICAZIONI A N_CHAR_B
		ADD.L		D2,D3		*PER CONSIDERARE ANCHE LO SPAZIO OCCUPATO DAI MESSAGGI DI C
		MOVE.B 	(A1),(A0,D3)
		ADDI.B 	#1,D0
		MOVE.B	D0,C_CHB
		MOVE.B 	N,D2
		CMP 		D2,D0 		* IF N_CHAR_B == N
		BNE		END
		MOVE.B	#0,C_CHB	*RESET CONT CHAR
		ADDI.B		#1,C_MGB	* INCREMENTA NUMERO MESSAGGI
		MOVE.B 	#1,TURN 	
		MOVE.B	#1,SUSPB	
		MOVE.B 	T,D0		*SOVRASCRIVO PERCHE NON MI SERVONO PIU
		MOVE.B	C_MGB,D1
		CMP 		D0,D1		*IF N_MESS_B == T
		BNE 		CHKB
		MOVE.B	#0,SUSPB
		MOVEA.L 	#PIACB,A0
		MOVE.B 	#$00,(A0)	*SPENGO PIAB IMPOSTANDO CONTROLLO A TUTTI 0
		JMP		END

CHKB		CMPI.B 	#1,SUSPC	*CONTROLLA SE C E' SOSPESO
		BNE		END
		MOVEA.L	#MSG,A0		*SALVO VALORE DI C SOSPESO
		MOVEA.L	#PIADC,A1		
		CLR.L		D0
		CLR.L		D1
		CLR.L		D2
		MOVE.B	C_CHC,D0 	*CARICO NUMERO CHAR C
		MOVE.B	C_MGC,D1 	*CARICO NUMERO MSG C
		MOVE.B	C_MGB,D2 	*CARICO NUMERO MSG B
		MOVE.B 	N,D3 		*CARICO NUMERO CARATTERI PER MSG
		MULU		D3,D2		* MOLTIPLICAZIONE NxMSG_B 
		MULU 		D1,D3		*MOLTIPLICAZIONE NxMSG_C
		ADD.L 		D0,D3		*SOMMO LE PRECEDENTI DUE MOLTIPLICAZIONI A N_CHAR_C
		ADD.L		D2,D3		*PER CONSIDERARE ANCHE LO SPAZIO OCCUPATO DAI MESSAGGI DI B
		MOVE.B	(A1),(A0,D3)
		ADDI.B		#1,C_CHC
		MOVE.B	#0,SUSPC
		JMP		END

WAITB 	MOVE.B 	#1,SUSPB
		JMP		RIPR

*******************************************************
*END ISR B CODE
*******************************************************

*******************************************************
*BEGIN ISR C CODE
*******************************************************

		ORG 	$8800
ISRC		MOVE.L 	D0,-(A7)
		MOVE.L 	D1,-(A7)
		MOVE.L 	D2,-(A7)
		MOVE.L 	A0,-(A7)
		MOVE.L	A1,-(A7)

		TAS		LOCK
		BNE 		WAITC
		MOVE.B 	FASE,D0
		BNE	 	FASE2C *CHECK FASE
		
FASE1C	MOVE.B	N,D0
		MOVE.B	C_CHC,D1
		CMP 		D0,D1		*CONTROLLO SE ASPETTO ALTRI CARATTERI DA C
		BNE 		SAVEC
		MOVE.B	C_CHC,D2	*CONTROLLO SE ANCHE B HA TERMINATO IL MESSAGGIO
		BNE 		END
		MOVE.B 	#1,FASE 	*CAMBIO IN FASE 2
		MOVE.B 	#0,C_CHB
		MOVE.B 	#0,C_CHC
		ADDA.L 	#-4,A7		*LASCIO UNA WORD PER VALORE RITORNO
		MOVE.L 	#MFB,-(A7)
		MOVE.L 	#MFC,-(A7)
		JSR 		CHECK
		ADDA.L	#8,A7
		MOVE.L 	(A7)+,D0	*VALORE DI RITORNO
		BNE 		T1
		JMP		T0

SAVEC 		MOVEA.L	 #MFC,A0
		MOVEA.L	#PIADC,A1
		MOVE.B	C_CHC,D0
		MOVE.B 	(A1),(A0,D0)
		ADDI.B		#1,C_CHC
		MOVE.B	C_CHB,D0
		MOVE.B	N,D1
		CMP		D0,D1
		BEQ		END
		MOVE.B 	SUSPB,D0
		BEQ 		END		*SE B ERA SOSPESO EFFETTUO IL SALVATAGGIO DI QUEL VALORE
		MOVEA.L 	#MFB,A0
		MOVEA.L	#PIADB,A1
		MOVE.B 	C_CHB,D0
		MOVE.B 	(A1),(A0,D0)
		ADDI.B		#1,C_CHB
		MOVE.B	#0,SUSPB
		JMP 		END

FASE2C	MOVE.B	TURN,D0	*SE TURNO E' 0 ALLORA TOCCA A fB
		BEQ		CHKC
		MOVEA.L	#MSG,A0
		MOVEA.L	#PIADC,A1
		CLR.L		D0
		CLR.L		D1
		CLR.L		D2
		MOVE.B	C_CHC,D0 	*CARICO NUMERO CHAR C
		MOVE.B	C_MGC,D1 	*CARICO NUMERO MSG C
		MOVE.B	C_MGB,D2 	*CARICO NUMERO MSG B
		MOVE.B 	N,D3 		*CARICO NUMERO CARATTERI PER MSG
		MULU		D3,D2		* MOLTIPLICAZIONE NxMSG_B 
		MULU 		D1,D3		*MOLTIPLICAZIONE NxMSG_C
		ADD.L 		D0,D3		*SOMMO LE PRECEDENTI DUE MOLTIPLICAZIONI A N_CHAR_C
		ADD.L		D2,D3		*PER CONSIDERARE ANCHE LO SPAZIO OCCUPATO DAI MESSAGGI DI B
		MOVE.B	(A1),(A0,D3)
		ADDI.B 	#1,D0
		MOVE.B	D0,C_CHC
		MOVE.B 	N,D2
		CMP 		D2,D0 		* IF N_CHAR_C == N
		BNE		END
		MOVE.B	#0,C_CHC	*RESET CONT CHAR
		ADDI.B		#1,C_MGC	* INCREMENTA NUMERO MESSAGGI
		MOVE.B 	#0,TURN 		
		MOVE.B	#1,SUSPC
		MOVE.B 	T,D0		*SOVRASCRIVO PERCHE NON MI SERVONO PIU
		MOVE.B	C_MGC,D1
		CMP 		D0,D1		*IF N_MESS_C == T
		BNE 		CHKC
		MOVE.B	#0,SUSPC
		MOVEA.L 	#PIACC,A0
		MOVE.B 	#$00,(A0)	*SPENGO PIAC IMPOSTANDO CONTROLLO A TUTTI 0
		JMP		END

CHKC		CMPI.B 	#1,SUSPB	*CONTROLLA SE C E' SOSPESO
		BNE		END
		MOVEA.L	#MSG,A0		*SALVO VALORE DI C SOSPESO
		MOVEA.L	#PIADB,A1
		CLR.L		D0
		CLR.L		D1
		CLR.L		D2		
		MOVE.B	C_CHB,D0 	*CARICO NUMERO CHAR B
		MOVE.B	C_MGB,D1 	*CARICO NUMERO MSG B
		MOVE.B	C_MGC,D2 	*CARICO NUMERO MSG C
		MOVE.B 	N,D3 		*CARICO NUMERO CARATTERI PER MSG
		MULU		D3,D2		* MOLTIPLICAZIONE NxMSG_C 
		MULU 		D1,D3		*MOLTIPLICAZIONE NxMSG_B
		ADD.L 		D0,D3		*SOMMO LE PRECEDENTI DUE MOLTIPLICAZIONI A N_CHAR_B
		ADD.L		D2,D3		*PER CONSIDERARE ANCHE LO SPAZIO OCCUPATO DAI MESSAGGI DI C
		MOVE.B	(A1),(A0,D3)
		ADDI.B		#1,C_CHB
		MOVE.B	#0,SUSPB
		JMP		END

WAITC		MOVE.B	#1,SUSPC
		JMP		RIPR

*******************************************************
*END ISRC CODE
*******************************************************




T0 		MOVE.B	#1,TURN 	*INIZIA C
		MOVE.B	#1,SUSPB
		JMP 		END

T1 		MOVE.B 	#0,TURN 	*INIZIA B
		MOVE.B	#1,SUSPC
		JMP		END


END 		MOVE.B	#0,LOCK
RIPR		MOVE.L 	(A7)+,A1
		MOVE.L	(A7)+,A0
		MOVE.L 	(A7)+,D2
		MOVE.L 	(A7)+,D1
		MOVE.L	(A7)+,D0
		RTE
		
		END		MAIN


